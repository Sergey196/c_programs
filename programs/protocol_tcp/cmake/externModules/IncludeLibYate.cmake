#Подключение библиотеки libpxx-1.0 с проверкой версии cmake
#проверьте, что есть переменная CMAKE_MINOR_VERSION
MACRO(include_lib_yate)
   if (${CMAKE_MINOR_VERSION} LESS 8)
      message("Check libyate")
#      find_path( LIB_YATE_INCLUDE_DIR yate HINTS /usr/include/yate/ /usr/local/include/yate/ )
#      find_library(LIB_YATE_LIBRARIES NAMES yate PATHS /usr/lib/ /usr/local/lib)
find_path(LIB_YATE_INCLUDE_DIR yatecbase.h HINTS  /usr/include/yate/ /usr/local/include/yate/ )
find_library(LIB_YATE_LIBRARIES NAMES libyate.so libyateqt4.so HINTS /usr/lib/ /usr/local/lib/)

      if(${LIB_YATE_INCLUDE_DIR} STREQUAL "LIB_YATE_INCLUDE_DIR-NOTFOUND")
         message("Check libyate ... NOT FOUND")
      else(${LIB_YATE_INCLUDE_DIR} STREQUAL "LIB_YATE_INCLUDE_DIR-NOTFOUND")
         message("Check libyate ... OK")
      endif(${LIB_YATE_INCLUDE_DIR} STREQUAL "LIB_YATE_INCLUDE_DIR-NOTFOUND")
      include_directories(${LIB_YATE_INCLUDE_DIR})
   else(${CMAKE_MINOR_VERSION} LESS 8)
      message("Check libyate")
      find_package(LibYate REQUIRED)

      if(${LIB_YATE_INCLUDE_DIR} STREQUAL "LIB_YATE_INCLUDE_DIR-NOTFOUND")
         message("Check libyate ... NOT FOUND")
      else(${LIB_YATE_INCLUDE_DIR} STREQUAL "LIB_YATE_INCLUDE_DIR-NOTFOUND")
         message("Check libyate ... OK")                           
      endif(${LIB_YATE_INCLUDE_DIR} STREQUAL "LIB_YATE_INCLUDE_DIR-NOTFOUND")
      include_directories(${LIB_YATE_INCLUDE_DIR})
   endif(${CMAKE_MINOR_VERSION} LESS 8)
ENDMACRO(include_lib_yate)   